- fail: msg="no nic is defined"
  when: "nics_addresses | length == 0"

- name: install packages
  yum:
    name: "{{ item }}"
    state: installed
  with_items:
  - pciutils
  - dpdk
  - dpdk-tools
  - driverctl
  - tuned-profiles-cpu-partitioning

- set_fact: "cpu_list={{ nics_addresses | get_cpu_list}}"

- set_fact: "nics_numa_info={{ nics_addresses | get_dpdk_nics_numa_info}}"

- name: print nics per numa
  debug:
    msg: "nics_numa_info={{ nics_addresses | get_dpdk_nics_numa_info}}"

- name: register default kernel
  shell: grubby --default-kernel
  register: default_kernel

- name: check if 1GB hugepages are enabled
  shell: grep -q pdpe1gb /proc/cpuinfo
  register: is_1gb_enabled
  changed_when: "is_1gb_enabled.rc == 0"
  failed_when: "is_1gb_enabled.rc == 2"

- name: add 1GB hugepages to grub
  shell: grubby --args="hugepagesz=1G hugepagesz=1G hugepages={{ nr_1g_hugepages }}" --update-kernel {{ default_kernel.stdout_lines[0] }}
  when: is_1gb_enabled.changed
  register: grub_hugepages

- name: add 2M hugepages to grub when 1GB hugepages not supported
  shell: grubby --args="hugepagesz=1G hugepagesz=1G hugepages={{ nr_2m_hugepages }}" --update-kernel {{ default_kernel.stdout_lines[0] }}
  when: not is_1gb_enabled.changed
  register: grub_hugepages

- name: add isolated cpus to tuned
  lineinfile:
    path: /etc/tuned/cpu-partitioning-variables.conf
    regexp: "^isolated_cores=.*"
    line: "isolated_cores={{ cpu_list }}"
  register: isolated_cores

- name: select the cpu-partitioning tuned profile
  command: tuned-adm profile cpu-partitioning
  when: isolated_cores.changed
  register: grub_isolated_cores

- name: add iommu to grub
  shell: grubby --args="iommu=pt intel_iommu=on" --update-kernel {{ default_kernel.stdout_lines[0] }}
  register: grub_iommu

- debug: msg="{{kernel_module}} {{pci_addresses}}"

# - name: restart server
#   shell: sleep 5 && shutdown -r now "Ansible updates triggered"
#   async: 0
#   poll: 0
#   become: true
#   ignore_errors: true

# - name: Wait for host to come back
#   wait_for_connection:
#     timeout: 600

- name: bind nic to dpdk permanently
  command: "driverctl -v set-override {{ item }} {{ kernel_module }}"
  with_items: "{{ pci_addresses }}"
